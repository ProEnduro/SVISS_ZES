-- MySQL Script generated by MySQL Workbench
-- 08/22/16 08:20:31
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ZES_SVISS
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `ZES_SVISS` ;

-- -----------------------------------------------------
-- Schema ZES_SVISS
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ZES_SVISS` DEFAULT CHARACTER SET utf8 ;
USE `ZES_SVISS` ;

-- -----------------------------------------------------
-- Table `ZES_SVISS`.`ZESAccess`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ZES_SVISS`.`ZESAccess` ;

CREATE TABLE IF NOT EXISTS `ZES_SVISS`.`ZESAccess` (
  `AccessLevelID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `AccessLevelName` VARCHAR(45) NOT NULL,
  `Permissions` VARCHAR(300) NOT NULL,
  PRIMARY KEY (`AccessLevelID`),
  UNIQUE INDEX `AccessLevelName_UNIQUE` (`AccessLevelName` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ZES_SVISS`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ZES_SVISS`.`User` ;

CREATE TABLE IF NOT EXISTS `ZES_SVISS`.`User` (
  `UserNr` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `AccessLevelID` INT UNSIGNED NOT NULL,
  `PersName` VARCHAR(45) NOT NULL,
  `VacationLeft` TINYINT UNSIGNED NOT NULL DEFAULT 25 COMMENT 'in days',
  `OverTimeLeft` INT NOT NULL DEFAULT 0 COMMENT 'in minutes',
  `Username` VARCHAR(45) NOT NULL,
  `EMail` VARCHAR(50) NOT NULL,
  `Hiredate` DATE NOT NULL,
  `Password` VARCHAR(128) BINARY NOT NULL,
  `WeekTime` DECIMAL(5,2) NULL COMMENT 'in hours',
  `Disabled` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`UserNr`),
  INDEX `AccessLeve_idx` (`AccessLevelID` ASC),
  UNIQUE INDEX `Username_UNIQUE` (`Username` ASC),
  UNIQUE INDEX `EMail_UNIQUE` (`EMail` ASC),
  CONSTRAINT `User_AccessLevel_FK`
    FOREIGN KEY (`AccessLevelID`)
    REFERENCES `ZES_SVISS`.`ZESAccess` (`AccessLevelID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ZES_SVISS`.`WorkTime`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ZES_SVISS`.`WorkTime` ;

CREATE TABLE IF NOT EXISTS `ZES_SVISS`.`WorkTime` (
  `TimeID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `UserNr` INT UNSIGNED NOT NULL,
  `StartTime` DATETIME NOT NULL,
  `EndTime` DATETIME NULL,
  `BreakTime` INT NOT NULL DEFAULT 0,
  `StartComment` VARCHAR(100) NULL,
  `EndComment` VARCHAR(100) NULL,
  `SollStartTime` TIME NOT NULL,
  `SollEndTime` TIME NOT NULL,
  PRIMARY KEY (`TimeID`, `UserNr`),
  INDEX `WorkTime_PersNr_FK_idx` (`UserNr` ASC),
  CONSTRAINT `WorkTime_PersNr_FK`
    FOREIGN KEY (`UserNr`)
    REFERENCES `ZES_SVISS`.`User` (`UserNr`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ZES_SVISS`.`SollZeiten`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ZES_SVISS`.`SollZeiten` ;

CREATE TABLE IF NOT EXISTS `ZES_SVISS`.`SollZeiten` (
  `DayID` ENUM('MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN') NOT NULL,
  `UserNr` INT UNSIGNED NOT NULL,
  `Inserted` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `SollStartTime` TIME NOT NULL,
  `SollEndTime` TIME NOT NULL,
  PRIMARY KEY (`DayID`, `UserNr`, `Inserted`),
  INDEX `PersNr_idx` (`UserNr` ASC),
  CONSTRAINT `SollZeit_PersNr_FK`
    FOREIGN KEY (`UserNr`)
    REFERENCES `ZES_SVISS`.`User` (`UserNr`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ZES_SVISS`.`AbsenceType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ZES_SVISS`.`AbsenceType` ;

CREATE TABLE IF NOT EXISTS `ZES_SVISS`.`AbsenceType` (
  `AbsenceTypeID` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `AbsenceTypeName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`AbsenceTypeID`),
  UNIQUE INDEX `AbsenceTypName_UNIQUE` (`AbsenceTypeName` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ZES_SVISS`.`Absence`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ZES_SVISS`.`Absence` ;

CREATE TABLE IF NOT EXISTS `ZES_SVISS`.`Absence` (
  `AbsenceID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `UserNr` INT UNSIGNED NOT NULL,
  `AbsenceTypeID` TINYINT UNSIGNED NOT NULL,
  `StartTime` DATETIME NOT NULL,
  `EndTime` DATETIME NOT NULL,
  `Reason` VARCHAR(45) NULL,
  `Acknowledged` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`AbsenceID`, `UserNr`),
  INDEX `PersNr_FK_idx` (`UserNr` ASC),
  INDEX `AbsenceType_FK_idx` (`AbsenceTypeID` ASC),
  CONSTRAINT `Absence_PersNr_FK`
    FOREIGN KEY (`UserNr`)
    REFERENCES `ZES_SVISS`.`User` (`UserNr`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `AbsenceType_FK`
    FOREIGN KEY (`AbsenceTypeID`)
    REFERENCES `ZES_SVISS`.`AbsenceType` (`AbsenceTypeID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ZES_SVISS`.`ApproverUser`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ZES_SVISS`.`ApproverUser` ;

CREATE TABLE IF NOT EXISTS `ZES_SVISS`.`ApproverUser` (
  `ApproverNr` INT UNSIGNED NOT NULL,
  `UserNr` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`ApproverNr`, `UserNr`),
  INDEX `USER_USER_FK_idx` (`UserNr` ASC),
  CONSTRAINT `APPROVER_USER_FK`
    FOREIGN KEY (`ApproverNr`)
    REFERENCES `ZES_SVISS`.`User` (`UserNr`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
  CONSTRAINT `USER_USER_FK`
    FOREIGN KEY (`UserNr`)
    REFERENCES `ZES_SVISS`.`User` (`UserNr`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ZES_SVISS`.`Holiday`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ZES_SVISS`.`Holiday` ;

CREATE TABLE IF NOT EXISTS `ZES_SVISS`.`Holiday` (
  `HolidayDate` DATE NOT NULL,
  `HolidayComment` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`HolidayDate`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ZES_SVISS`.`UserHolidayOvertimeHistory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ZES_SVISS`.`UserHolidayOvertimeHistory` ;

CREATE TABLE IF NOT EXISTS `ZES_SVISS`.`UserHolidayOvertimeHistory` (
  `MonthTS` TIMESTAMP NOT NULL,
  `UserNr` INT UNSIGNED NOT NULL,
  `Overtime` INT NOT NULL,
  `Vacation` TINYINT NOT NULL,
  PRIMARY KEY (`MonthTS`, `UserNr`),
  INDEX `User_History_FK_idx` (`UserNr` ASC),
  CONSTRAINT `User_History_FK`
    FOREIGN KEY (`UserNr`)
    REFERENCES `ZES_SVISS`.`User` (`UserNr`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `ZES_SVISS`.`ZESAccess`
-- -----------------------------------------------------
START TRANSACTION;
USE `ZES_SVISS`;
INSERT INTO `ZES_SVISS`.`ZESAccess` (`AccessLevelName`, `Permissions`) VALUES ('Admin', 'ALL');
INSERT INTO `ZES_SVISS`.`ZESAccess` (`AccessLevelName`, `Permissions`) VALUES ('Approver', 'INPUT_TIME;EDIT_ACCOUNT;VIEW_ALL_ABSENCES;ACKNOWLEDGE_USERS;EDIT_HOLIDAY;EVALUATE_ALL;');
INSERT INTO `ZES_SVISS`.`ZESAccess` (`AccessLevelName`, `Permissions`) VALUES ('Reader', 'VIEW_ALL_TIMES;EVALUATE_ALL;EDIT_ACCOUNT;');
INSERT INTO `ZES_SVISS`.`ZESAccess` (`AccessLevelName`, `Permissions`) VALUES ('User', 'INPUT_TIME;EDIT_ACCOUNT;VIEW_ALL_ABSENCES;EVALUATE_SELF;');

COMMIT;


-- -----------------------------------------------------
-- Data for table `ZES_SVISS`.`User`
-- -----------------------------------------------------
START TRANSACTION;
USE `ZES_SVISS`;
INSERT INTO `ZES_SVISS`.`User` (`AccessLevelID`, `PersName`, `VacationLeft`, `OverTimeLeft`, `Username`, `EMail`, `Hiredate`, `Password`, `WeekTime`) VALUES (1, 'AdminUser', 0, 0, 'admin', 'admin@sviss.at', '2016-1-1', 'c7ad44cbad762a5da0a452f9e854fdc1e0e7a52a38015f23f3eab1d80b931dd472634dfac71cd34ebc35d16ab7fb8a90c81f975113d6c7538dc69dd8de9077ec', 0);

COMMIT;


-- -----------------------------------------------------
-- Data for table `ZES_SVISS`.`WorkTime`
-- -----------------------------------------------------
START TRANSACTION;
USE `ZES_SVISS`;

COMMIT;


-- -----------------------------------------------------
-- Data for table `ZES_SVISS`.`SollZeiten`
-- -----------------------------------------------------
START TRANSACTION;
USE `ZES_SVISS`;
COMMIT;


-- -----------------------------------------------------
-- Data for table `ZES_SVISS`.`AbsenceType`
-- -----------------------------------------------------
START TRANSACTION;
USE `ZES_SVISS`;
INSERT INTO `ZES_SVISS`.`AbsenceType` (`AbsenceTypeName`) VALUES ('medical leave');
INSERT INTO `ZES_SVISS`.`AbsenceType` (`AbsenceTypeName`) VALUES ('holiday');
INSERT INTO `ZES_SVISS`.`AbsenceType` (`AbsenceTypeName`) VALUES ('time compensation');
INSERT INTO `ZES_SVISS`.`AbsenceType` (`AbsenceTypeName`) VALUES ('business-related absence');

COMMIT;


-- -----------------------------------------------------
-- Data for table `ZES_SVISS`.`Absence`
-- -----------------------------------------------------
START TRANSACTION;
USE `ZES_SVISS`;

COMMIT;

